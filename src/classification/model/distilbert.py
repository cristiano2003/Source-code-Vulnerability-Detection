import torch.nn as nn
import torch



class DistilBERT(nn.Module):
    def __init__(self, model):
        super(DistilBERT, self).__init__()

        self.model = model
        self.dropout1 = nn.Dropout(p=0.2)
        self.linear1 = nn.Linear(768, 3072)
        self.relu = nn.ReLU()
        self.dropout2 = nn.Dropout(p=0.2)
        self.linear2 = nn.Linear(3072, 3072)
        self.classifier = nn.Linear(3072, 12)


    def forward(self, input_ids, attention_mask):
        # codeBERT output pooled
        output = self.model(input_ids = input_ids, attention_mask = attention_mask)
        output = torch.mean(output.last_hidden_state, 1)

        # classification head (https://arxiv.org/pdf/2204.03214.pdf, Table 4)
        
        output = self.linear1(output)
        output = self.relu(output)
        output = self.dropout2(output)
        output = self.linear2(output)
        output = self.classifier(output)

        return output