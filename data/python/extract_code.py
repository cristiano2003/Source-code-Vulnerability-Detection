import json
import os

# Define the input JSON file path and output directory
input_json_file = '/home/dhtuan/test/file-000000000001.json/file-000000000001.json'
output_base_dir = 'extracted_python_files'
state_file = 'extraction_state.txt'
files_per_folder = 1000  # Number of files per folder

# Create the base output directory if it doesn't exist
os.makedirs(output_base_dir, exist_ok=True)

# Initialize or load the extraction state
if os.path.exists(state_file):
    with open(state_file, 'r') as file:
        last_processed_line, global_file_counter = file.read().split()
        last_processed_line = int(last_processed_line)
        global_file_counter = int(global_file_counter)
else:
    last_processed_line = 0
    global_file_counter = 1

# Function to update the state file
def update_state_file(last_processed_line, global_file_counter):
    with open(state_file, 'w') as state:
        state.write(f'{last_processed_line} {global_file_counter}')

# Read and process the JSON file
with open(input_json_file, 'r') as file:
    for i, line in enumerate(file):
        if i < last_processed_line:
            continue
        try:
            # Parse the JSON line
            entry = json.loads(line.strip())

            # Extract Python content
            if 'content' in entry:
                python_content = entry['content']

                # Determine the folder based on the global file counter
                current_folder = (global_file_counter - 1) // files_per_folder + 1

                # Define the folder and output file paths
                folder_path = os.path.join(output_base_dir, f'folder_{current_folder}')
                os.makedirs(folder_path, exist_ok=True)
                output_file_path = os.path.join(folder_path, f'{global_file_counter}.py')

                # Write the extracted content to a new Python file
                with open(output_file_path, 'w') as code_file:
                    code_file.write(python_content)

                print(f'Extracted code written to {output_file_path}')

                # Increment the global file counter
                global_file_counter += 1

                # Update the state file
                update_state_file(i + 1, global_file_counter)
        except json.JSONDecodeError as e:
            print(f'Error decoding JSON on line {i + 1}: {e}')

print(f'Extraction complete. Processed up to line {i + 1}.')
